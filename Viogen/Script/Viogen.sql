DROP DATABASE IF EXISTS VIOGEN;
CREATE DATABASE VIOGEN;
USE VIOGEN;


DROP TABLE IF EXISTS RIESGO;
CREATE TABLE RIESGO (
	COD_RIESGO CHAR(1),
    RIESGO VARCHAR(20),
	CONSTRAINT PK_RIESGO PRIMARY KEY (COD_RIESGO)
);

DROP TABLE IF EXISTS USUARIAS;
CREATE TABLE USUARIAS (
	COD_USUARIA INT AUTO_INCREMENT,
    DNI CHAR(9),
    NIE CHAR(9),   
    NOMBRE VARCHAR(100),
    APELLIDO1 VARCHAR(100),
    APELLIDO2 VARCHAR(100),
    NACIONALIDAD VARCHAR(40),
    TELEFONO VARCHAR(12),
    DIRECCION VARCHAR(200),
    CP CHAR(5),
    COD_RIESGO CHAR(1),
    -- solicita_op
    INFO_RAI CHAR(1) DEFAULT '',
    INFO_PAGO_UNICO CHAR(1) DEFAULT '',
    INFO_VIPASA CHAR(1) DEFAULT '',
    INFO_AYUDA_EMERGENCIA CHAR(1) DEFAULT '',
    CONSTRAINT PK_USUARIAS PRIMARY KEY (COD_USUARIA),
    CONSTRAINT UK_DNI_NIE UNIQUE KEY (DNI,NIE),
    CONSTRAINT FK_USUARIAS_RIESGO FOREIGN KEY (COD_RIESGO) REFERENCES RIESGO(COD_RIESGO),
    CONSTRAINT CK_DNI CHECK((substring(DNI, 1, 7) REGEXP '[0-9]' AND SUBSTRING(DNI, 9, 1) REGEXP '[A-Z]') OR DNI =''),
    CONSTRAINT CK_NIE CHECK((substring(NIE, 1, 1) REGEXP '[A-Z]' AND SUBSTRING(DNI, 2, 7) REGEXP '[0-9]' AND SUBSTRING(NIE, 9, 1) REGEXP '[A-Z]')OR NIE =''),
	CONSTRAINT CK_INFO_RAI CHECK(INFO_RAI IN ('', 'X')),
    CONSTRAINT CK_INFO_PAGO_UNICO CHECK(INFO_PAGO_UNICO IN ('', 'X')),
    CONSTRAINT CK_INFO_VIPASA CHECK(INFO_VIPASA IN ('', 'X')),
    CONSTRAINT CK_INFO_AYUDA_EMERGENCIA CHECK(INFO_AYUDA_EMERGENCIA IN ('', 'X'))
    
);

DROP TABLE IF EXISTS AGRESORES;
CREATE TABLE AGRESORES(
       COD_AGRESOR INT AUTO_INCREMENT,
       DNI CHAR(9),
       NIE CHAR(9),
       NOMBRE VARCHAR(100),
       APELLIDOS1 VARCHAR(100),
       APELLIDO2 VARCHAR(100),
       CONSTRAINT PK_AGRESORES PRIMARY KEY (COD_AGRESOR),
       CONSTRAINT CK_DNI_AG CHECK(substring(DNI, 1, 7) REGEXP '[0-9]' AND SUBSTRING(DNI, 9, 1) REGEXP '[A-Z]'),
       CONSTRAINT CK_NIE_AG CHECK((substring(NIE, 1, 1) REGEXP '[A-Z]' AND SUBSTRING(DNI, 2, 7) REGEXP '[0-9]' AND SUBSTRING(NIE, 9, 1) REGEXP '[A-Z]')OR NIE ='')
);

DROP TABLE IF EXISTS VINCULOS;
CREATE TABLE VINCULOS(
         COD_USUARIA INT,
         COD_AGRESOR INT,
         CONSTRAINT PK_VINCULOS PRIMARY KEY (COD_USUARIA, COD_AGRESOR),
         CONSTRAINT FK_VINCULOS_USUARIAS FOREIGN KEY (COD_USUARIA) REFERENCES USUARIAS(COD_USUARIA),
         CONSTRAINT FK_VINCULOS_AGRESORES FOREIGN KEY (COD_AGRESOR) REFERENCES AGRESORES(COD_AGRESOR)
         
);



DROP TABLE IF EXISTS HISTORIAL;
CREATE TABLE HISTORIAL (
	COD_USUARIA INT,
    COD_RIESGO CHAR(1),
    FECHA_CAMBIO DATE DEFAULT (CURRENT_DATE),
	CONSTRAINT PK_HISTORIAL PRIMARY KEY (COD_USUARIA, COD_RIESGO, FECHA_CAMBIO),
    CONSTRAINT FK_HISTORIAL_USUARIAS FOREIGN KEY (COD_USUARIA) REFERENCES USUARIAS(COD_USUARIA),
    CONSTRAINT FK_HISTORIAL_RIESGO FOREIGN KEY (COD_RIESGO) REFERENCES RIESGO(COD_RIESGO)
);

DROP TABLE IF EXISTS ORDEN_PROTEC;
CREATE TABLE ORDEN_PROTEC (
	COD_ORDEN INT AUTO_INCREMENT,
    COD_USUARIA INT,
    COD_AGRESOR INT,
    EXPEDIENTE CHAR(20),
    FECHA_INICIO DATE DEFAULT (CURRENT_DATE),
    FECHA_FIN DATE,
    CONSTRAINT PK_ORDEN_PROTEC PRIMARY KEY (COD_ORDEN),
    CONSTRAINT FK_ORDEN_PROTEC_USUARIAS FOREIGN KEY (COD_USUARIA) REFERENCES USUARIAS(COD_USUARIA),
    CONSTRAINT FK_ORDEN_PROTEC_AGRESORES FOREIGN KEY (COD_AGRESOR) REFERENCES AGRESORES(COD_AGRESOR)
);

DROP TABLE IF EXISTS JURISDICCION;
CREATE TABLE JURISDICCION (
	COD_JURISDICCION CHAR(1),
    JURISDICCION CHAR(20),
    CONSTRAINT PK_JURISDICCION PRIMARY KEY (COD_JURISDICCION)
);

DROP TABLE IF EXISTS MEDIDAS;
CREATE TABLE MEDIDAS (
	COD_MEDIDA INT AUTO_INCREMENT,
    COD_ORDEN INT,
    COD_JURISDICCION CHAR(1),
    COD_TIPO_MEDIDA INT,
    CONTENIDO VARCHAR(3000),
    FECHA_INICIO DATE DEFAULT (CURRENT_DATE),
    FECHA_FIN DATE,
    CONSTRAINT PK_MEDIDAS PRIMARY KEY (COD_MEDIDA),
    CONSTRAINT FK_MEDIDAS_ORDEN_PROTEC FOREIGN KEY (COD_ORDEN) REFERENCES ORDEN_PROTEC(COD_ORDEN),
    CONSTRAINT FK_MEDIDAS_JURISDICCION FOREIGN KEY (COD_JURISDICCION) REFERENCES JURISDICCION(COD_JURISDICCION),
    CONSTRAINT FK_MEDIDAS_TIPO_MEDIDA FOREIGN KEY (COD_TIPO_MEDIDA) REFERENCES TIPO_MEDIDAS(COD_TIPO_MEDIDA)
);




INSERT INTO JURISDICCION VALUES ('C', 'Civil'), ('P', 'Penal');
INSERT INTO RIESGO VALUES ('E', ' Riesgo Extremo'), ('A', 'Riesgo Alto'),('M', ' Riesgo Medio'),('B', ' Riesgo Bajo'),('N', 'Nulo');



-- ------------------------------------------------------------------------------------------------------------------


call viogen.ALTA_USUARIA('12378945A', '', 'Zoa', 'De la Rosa', 'Montero', 'Mexicana', '123456780', 'Barrio exterior', '99999', 'A', 'X', @PS_REGISTRO);
call viogen.ALTA_USUARIA('12378945B', '', 'Patri', 'De la Rosa', 'Montero', 'Mexicana', '123456781', 'La Descalzada', '99999', 'B', '', @PS_REGISTRO);
call viogen.ALTA_USUARIA('12378945C', '', 'Rosario', 'De la Rosa', 'Montero', 'Mexicana', '123456782', 'La Descalzada', '99999', 'B', 'X', @PS_REGISTRO);
call viogen.ALTA_USUARIA('12378945D', '', 'Berta', 'De la Rosa', 'Montero', 'Española', '123456783', 'La Descalzada', '99999', 'B', 'X', @PS_REGISTRO);
call viogen.ALTA_USUARIA('12378945E', '', 'Lorena', 'De la Rosa', 'Montero', 'Española', '123456784', 'El Arenal', '99999', 'E', '', @PS_REGISTRO);
call viogen.ALTA_USUARIA('12378945T', '', 'Maribel', 'De la Rosa', 'Montero', 'Española', '123456785', 'El Arenal', '99999', 'E', 'X', @PS_REGISTRO);
call viogen.ALTA_USUARIA('12378945Y', '', 'Rebeca', 'De la Rosa', 'Montero', 'Española', '123456786', 'El Arenal', '99999', 'B', '', @PS_REGISTRO);
call viogen.ALTA_USUARIA('12378945U', '', 'Ainoa', 'De la Rosa', 'Montero', 'Francesa', '123456787', 'Pozos del Llano', '99999', 'B', 'X', @PS_REGISTRO);
call viogen.ALTA_USUARIA('12378945I', '', 'Antonia', 'De la Rosa', 'Montero', 'Francesa', '123456788', 'Pozos del Llano', '99999', 'M', 'X', @PS_REGISTRO);
call viogen.ALTA_USUARIA('12378945P', '', 'Fátima', 'Jiménez', 'Fátimez', 'Peruana', '123456777', 'Pozos del Llano', '99999', 'M', 'X', @PS_REGISTRO);
call viogen.ALTA_USUARIA('12378945M', '', 'María', 'De los Ángeles', 'Caídos', 'Peruana', '123256789', 'Pozos del Llano', '99999', 'M', 'X', @PS_REGISTRO);
call viogen.ALTA_USUARIA('12378945N', '', 'Virtud', 'De los Álamos', 'Montero', 'Magrebí', '123436789', 'Calle Melancolía', '99999', 'M', '', @PS_REGISTRO);
call viogen.ALTA_USUARIA('12378945Q', '', 'Celeste', 'Noes', 'Uncolor', 'Magrebí', '123456722', 'La Descalzada', '99999', 'A', 'X', @PS_REGISTRO);
call viogen.ALTA_AGRESOR('45698721J', '', 'Manuel', 'Del Campo ', 'Manuélez');
call viogen.ALTA_AGRESOR('35698721A', '', 'José', 'Del Campo ', 'Entelequio');
call viogen.ALTA_AGRESOR('25698721B', '', 'Miguel', 'Del Campo ', 'Abierto');
call viogen.ALTA_AGRESOR('15698721C', '', 'Mariano', 'Pérez ', 'Eustáquiez');
call viogen.ALTA_AGRESOR('05698721H', '', 'Ángel', 'García ', 'Bermúdez');
call viogen.ALTA_AGRESOR('95698721R', '', 'Jonás', 'García ', 'Bermúdez');
call viogen.ALTA_AGRESOR('85698721J', '', 'Abel', 'Fernández ', 'Trastámara');
call viogen.ALTA_AGRESOR('75698721G', '', 'Judas', 'Fernández ', 'Noexiste');
call viogen.ALTA_AGRESOR('65698721Q', '', 'Jeremías', 'Del Campo ', 'Manuélez');