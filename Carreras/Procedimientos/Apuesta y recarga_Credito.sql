DELIMITER $$
DROP PROCEDURE IF EXISTS APUESTA$$
CREATE PROCEDURE APUESTA(IN P_ID_USUARIO INT,
                         IN P_ID_GANADOR INT,
                         IN P_CANTIDAD DECIMAL (10,2))
BEGIN

SET @CREDITO = NULL;
SELECT CREDITO
       FROM USUARIOS
       WHERE ID_USUARIO = P_ID_USUARIO
      INTO @CREDITO;
 
 IF @CREDITO < P_CANTIDAD THEN
SIGNAL SQLSTATE '45000'
SET MESSAGE_TEXT = 'Crédito insuficiente para realizar la apuesta';
END IF;

 SET @CABALLO = NULL;
SELECT ID_CABALLO
       FROM CABALLOS 
       WHERE ID_CABALLO = P_ID_GANADOR
       INTO @CABALLO;

IF  @CABALLO  THEN
INSERT INTO APUESTAS  VALUES (DEFAULT, P_ID_USUARIO, P_ID_GANADOR, P_CANTIDAD);
ELSE
SIGNAL SQLSTATE '45000'
SET MESSAGE_TEXT = 'El caballo seleccionado no es valido';
END IF;

SET @ID_USUARIO = NULL;
SELECT ID_USUARIO
FROM USUARIOS
WHERE ID_USUARIO = P_ID_USUARIO
INTO @ID_USUARIO;

IF @ID_USUARIO IS NULL THEN 
SIGNAL SQLSTATE '45000'
SET MESSAGE_TEXT = 'El usuario seleccionado no exsite';
END IF;
END;
$$





DELIMITER //
DROP PROCEDURE IF EXISTS RECARGAR_CREDITO//
-- Crea un procedimiento almacenado llamado RECARGAR_CREDITO
CREATE PROCEDURE RECARGAR_CREDITO(
    IN PE_ID_USUARIO INT,
    IN PE_RECARGA NUMERIC(10,2)
)
BEGIN
    -- Verifica si el usuario existe
   SET @ID_USUARIO = NULL;
   SELECT ID_USUARIO
    FROM USUARIOS 
    WHERE ID_USUARIO = PE_ID_USUARIO
    INTO @ID_USUARIO;
    
    IF @ID_USUARIO IS NULL  THEN
    
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El ID de usuario no existe.';
        -- Actualiza el crédito del usuario sumando PE_RECARGA
        ELSE
        UPDATE USUARIOS
        SET CREDITO = CREDITO + PE_RECARGA
        WHERE ID_USUARIO = PE_ID_USUARIO;
   
    END IF;
END;
//

DELIMITER ;
